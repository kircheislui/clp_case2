---
- name: A15 | Get local users and Administrators group members
  ansible.windows.win_powershell:
    script: |
      try {
        $users = Get-LocalUser | Select-Object Name,Enabled
        $admins = Get-LocalGroupMember -Group 'Administrators' | Select-Object -ExpandProperty Name
        [PSCustomObject]@{ users=$users; admins=$admins } | ConvertTo-Json
      } catch {
        [PSCustomObject]@{ error=$_.Exception.Message } | ConvertTo-Json
      }
  register: a15

- name: A15 | Build/Eval
  set_fact:
    a15_json: "{{ (a15.stdout | from_json) if (a15.stdout | default('') | regex_search('^[{\\[]')) else {'error': a15.stdout} }}"
    a15_has_error: "{{ a15_json.error is defined }}"
    a15_users: "{{ (a15_json.users | default([])) }}"
    a15_admins: "{{ (a15_json.admins | default([])) }}"
    a15_actual: |-
      {% if a15_has_error %}
      Error: {{ a15_json.error }}
      {% else %}
      Local Users:
      {% for u in a15_users %}
        - Name: {{ u.Name }}, Enabled: {{ u.Enabled }}
      {% endfor %}
      Administrators Group:
      {% for m in a15_admins %}
        - {{ m }}
      {% endfor %}
      {% endif %}
    a15_status: >-
      {{
        (not a15_has_error and (a15_admins | difference(approved_admins) | length == 0))
        | ternary('OK', (safe_mode | bool) | ternary('Unknown','Fail'))
      }}

- name: A15 | Append
  set_fact:
    win_os_checks_struct: "{{ win_os_checks_struct | combine({
      inventory_hostname: win_os_checks_struct[inventory_hostname] | combine({
        'checks': (win_os_checks_struct[inventory_hostname].checks + [ {
          'control':'A15',
          'method':'PowerShell: Get-LocalUser; Get-LocalGroupMember -Group "Administrators"',
          'expected': expected_text.A15,
          'actual': a15_actual,
          'status': a15_status
        } ])
      }, recursive=True)
    }, recursive=True) }}"