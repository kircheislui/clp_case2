---
- name: A26 | wevtutil gl Security/System/Application
  vars:
    logs:
      - Security
      - System
      - Application
  ansible.windows.win_shell: "wevtutil gl {{ item }}"
  loop: "{{ logs }}"
  register: a26

- name: A26 | Parse sizes and build actual
  set_fact:
    sec_kb: "{{ (a26.results | selectattr('item','equalto','Security') | first).stdout | regex_search('maxSize:\\s*(\\d+)', '\\1') | int }}"
    sys_kb: "{{ (a26.results | selectattr('item','equalto','System') | first).stdout | regex_search('maxSize:\\s*(\\d+)', '\\1') | int }}"
    app_kb: "{{ (a26.results | selectattr('item','equalto','Application') | first).stdout | regex_search('maxSize:\\s*(\\d+)', '\\1') | int }}"
    a26_actual: |-
      Security MaxSize: {{ (sec_kb/1024)|round(0,'floor') }} MB
      System   MaxSize: {{ (sys_kb/1024)|round(0,'floor') }} MB
      Application MaxSize: {{ (app_kb/1024)|round(0,'floor') }} MB
    a26_status: >-
      {{
        (sec_kb >= policy.logs.security_min_mb*1024) and
        (sys_kb >= policy.logs.system_min_mb*1024) and
        (app_kb >= policy.logs.application_min_mb*1024)
        | ternary('OK','Fail')
      }}

- name: A26 | Append
  set_fact:
    win_os_checks_struct: "{{ win_os_checks_struct | combine({
      inventory_hostname: win_os_checks_struct[inventory_hostname] | combine({
        'checks': (win_os_checks_struct[inventory_hostname].checks + [ {
          'control':'A26',
          'method':'wevtutil gl Security/System/Application',
          'expected': expected_text.A26,
          'actual': a26_actual,
          'status': a26_status
        } ])
      }, recursive=True)
    }, recursive=True) }}"